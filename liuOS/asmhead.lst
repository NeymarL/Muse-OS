     1                                  ; haribote-os boot asm
     2                                  ; TAB=4
     3                                  
     4                                  BOTPAK  EQU     0x00280000      ; 我们主程序load地址
     5                                  DSKCAC  EQU     0x00100000      ; ディスクキャッシュの場所
     6                                  DSKCAC0 EQU     0x00008000      ; ディスクキャッシュの場所（リアルモード）
     7                                  
     8                                  ; BOOT_INFO関係
     9                                  CYLS    EQU     0x0ff0          ; 柱面数
    10                                  LEDS    EQU     0x0ff1
    11                                  VMODE   EQU     0x0ff2          ; 色数に関する情報。何ビットカラーか？
    12                                  SCRNX   EQU     0x0ff4          ; 解像度のX
    13                                  SCRNY   EQU     0x0ff6          ; 解像度のY
    14                                  VRAM    EQU     0x0ff8          ; グラフィックバッファの開始番地
    15                                  
    16                                          ORG     0x8200          ; 程序开始的地址
    17                                  
    18                                  ; 画面モードを設定
    19                                  
    20 00000000 B013                            MOV     AL,0x13         ; VGAグラフィックス、320x200x8bitカラー
    21 00000002 B400                            MOV     AH,0x00
    22 00000004 CD10                            INT     0x10
    23 00000006 C606F20F08                      MOV     BYTE [VMODE],8  ; 画面モードをメモする（C言語が参照する）
    24 0000000B C706F40F4001                    MOV     WORD [SCRNX],320
    25 00000011 C706F60FC800                    MOV     WORD [SCRNY],200
    26 00000017 66C706F80F00000A00              MOV     DWORD [VRAM],0x000a0000
    27                                  
    28                                  ; キーボードのLED状態をBIOSに教えてもらう
    29                                  
    30 00000020 B402                            MOV     AH,0x02
    31 00000022 CD16                            INT     0x16            ; keyboard BIOS
    32 00000024 A2F10F                          MOV     [LEDS],AL
    33                                  
    34                                  ; PICが一切の割り込みを受け付けないようにする
    35                                  ;   AT互換機の仕様では、PICの初期化をするなら、
    36                                  ;   こいつをCLI前にやっておかないと、たまにハングアップする
    37                                  ;   PICの初期化はあとでやる
    38                                  ; 禁用pic中断
    39                                  
    40 00000027 B0FF                            MOV     AL,0xff
    41 00000029 E621                            OUT     0x21,AL
    42 0000002B 90                              NOP                     ; OUT命令を連続させるとうまくいかない機種があるらしいので
    43 0000002C E6A1                            OUT     0xa1,AL
    44                                  
    45 0000002E FA                              CLI                     ; 禁用可屏蔽中断
    46                                  
    47                                  ; 开启A20管脚
    48                                  
    49 0000002F E89100                          CALL    waitkbdout
    50 00000032 B0D1                            MOV     AL,0xd1
    51 00000034 E664                            OUT     0x64,AL
    52 00000036 E88A00                          CALL    waitkbdout
    53 00000039 B0DF                            MOV     AL,0xdf         ; enable A20
    54 0000003B E660                            OUT     0x60,AL
    55 0000003D E88300                          CALL    waitkbdout
    56                                  
    57                                  ; プロテクトモード移行
    58                                  
    59                                  ;[INSTRSET "i486p"]              ; 486の命令まで使いたいという記述
    60                                  
    61 00000040 0F0116[EA00]                    LGDT    [GDTR0]         ; 暫定GDTを設定
    62 00000045 0F20C0                          MOV     EAX,CR0
    63 00000048 6625FFFFFF7F                    AND     EAX,0x7fffffff  ; 禁止分页
    64 0000004E 6683C801                        OR      EAX,0x00000001  ; 开启保护模式
    65 00000052 0F22C0                          MOV     CR0,EAX         ; protected mode
    66 00000055 EB00                            JMP     pipelineflush   ; 段偏移量 
    67                                  pipelineflush:
    68 00000057 B80800                          MOV     AX,1*8          ;  読み書き可能セグメント32bit
    69 0000005A 8ED8                            MOV     DS,AX
    70 0000005C 8EC0                            MOV     ES,AX
    71 0000005E 8EE0                            MOV     FS,AX
    72 00000060 8EE8                            MOV     GS,AX
    73 00000062 8ED0                            MOV     SS,AX
    74                                  
    75                                  ; bootpackの転送
    76                                  
    77 00000064 66BE[F0000000]                  MOV     ESI,bootpack    ; 把我们的主程序加载到0x280000
    78 0000006A 66BF00002800                    MOV     EDI,BOTPAK      ; 転送先
    79 00000070 66B900000200                    MOV     ECX,512*1024/4
    80 00000076 E85100                          CALL    memcpy
    81                                  
    82                                  ; ついでにディスクデータも本来の位置へ転送
    83                                  
    84                                  ; まずはブートセクタから
    85                                  
    86 00000079 66BE007C0000                    MOV     ESI,0x7c00      ; 把boot程序加载到DSKCAC
    87 0000007F 66BF00001000                    MOV     EDI,DSKCAC      ; 転送先
    88 00000085 66B980000000                    MOV     ECX,512/4
    89 0000008B E83C00                          CALL    memcpy
    90                                  
    91                                  ; 残り全部
    92                                  
    93 0000008E 66BE00820000                    MOV     ESI,DSKCAC0+512 ; 把其余的也加载进来
    94 00000094 66BF00021000                    MOV     EDI,DSKCAC+512  ; 転送先
    95 0000009A 66B900000000                    MOV     ECX,0
    96 000000A0 8A0EF00F                        MOV     CL,BYTE [CYLS]
    97 000000A4 6669C900120000                  IMUL    ECX,512*18*2/4  ; シリンダ数からバイト数/4に変換
    98 000000AB 6681E980000000                  SUB     ECX,512/4       ; IPLの分だけ差し引く
    99 000000B2 E81500                          CALL    memcpy
   100                                  
   101                                  ; asmheadでしなければいけないことは全部し終わったので、
   102                                  ;   あとはbootpackに任せる
   103                                  
   104                                  ; bootpackの起動
   105                                  
   106                                          ;MOV     EBX,BOTPAK
   107                                          ;MOV     ECX,[EBX+16]
   108                                          ;ADD     ECX,3           ; ECX += 3;
   109                                          ;SHR     ECX,2           ; ECX /= 4;
   110                                          ;JZ      skip            ; 転送するべきものがない
   111                                          ;MOV     ESI,[EBX+20]    ; 転送元
   112                                          ;ADD     ESI,EBX
   113                                          ;MOV     EDI,[EBX+12]    ; 転送先
   114                                          ;CALL    memcpy
   115                                  ;skip:
   116                                          ;MOV     ESP,[EBX+12]    ; スタック初期値
   117                                          ;JMP     DWORD 2*8:0x0000001b
   118                                  
   119 000000B5 66BC00002800                    MOV     ESP, BOTPAK
   120 000000BB 66EA000000001000                JMP     DWORD 16:0x00000000
   121                                  
   122                                  
   123                                  waitkbdout:
   124 000000C3 E464                            IN       AL,0x64
   125 000000C5 2402                            AND      AL,0x02
   126 000000C7 75FA                            JNZ     waitkbdout      ; ANDの結果が0でなければwaitkbdoutへ
   127 000000C9 C3                              RET
   128                                  
   129                                  memcpy:
   130                                          ;MOV     EAX,[ESI]
   131                                          ;ADD     ESI,4
   132                                          ;MOV     [EDI],EAX
   133                                          ;ADD     EDI,4
   134                                          ;SUB     ECX,1
   135                                          ;JNZ     memcpy          ; 引き算した結果が0でなければmemcpyへ
   136 000000CA FC                              CLD
   137 000000CB F36667A5                        A32     REP     MOVSD
   138 000000CF C3                              RET
   139                                  ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、ストリング命令でも書ける
   140                                  
   141                                          ALIGNB  16
   142                                  GDT0:
   143 000000D0 <res 00000008>                  RESB    8               ; ヌルセレクタ
   144          ******************       warning: uninitialized space declared in .text section: zeroing
   145 000000D8 FFFF00000092CF00                DW      0xffff,0x0000,0x9200,0x00cf ; 読み書き可能セグメント32bit
   146 000000E0 FFFF0000289A4700                DW      0xffff,0x0000,0x9a28,0x0047 ; 実行可能セグメント32bit（bootpack用）
   147                                  
   148 000000E8 0000                            DW      0
   149                                  GDTR0:
   150 000000EA 1700                            DW      8*3-1
   151 000000EC [D0000000]                      DD      GDT0
   152                                  
   153                                          ALIGNB  16
   154                                  bootpack:
