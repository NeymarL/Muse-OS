
bootpack.o：     文件格式 elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	c7 45 fc 00 00 0a 00 	movl   $0xa0000,-0x4(%rbp)
   f:	c7 45 f8 06 00 00 00 	movl   $0x6,-0x8(%rbp)
  16:	8b 45 fc             	mov    -0x4(%rbp),%eax
  19:	48 83 ec 08          	sub    $0x8,%rsp
  1d:	68 96 00 00 00       	pushq  $0x96  ; y1
  22:	41 b9 aa 00 00 00    	mov    $0xaa,%r9d
  28:	41 b8 32 00 00 00    	mov    $0x32,%r8d ;y0
  2e:	b9 46 00 00 00       	mov    $0x46,%ecx
  33:	ba 02 00 00 00       	mov    $0x2,%edx
  38:	be 40 01 00 00       	mov    $0x140,%esi
  3d:	89 c7                	mov    %eax,%edi
  3f:	e8 00 00 00 00       	callq  44 <main+0x44>
  44:	48 83 c4 10          	add    $0x10,%rsp
  48:	b8 00 00 00 00       	mov    $0x0,%eax
  4d:	e8 00 00 00 00       	callq  52 <main+0x52>
  52:	eb f4                	jmp    48 <main+0x48>

0000000000000054 <boxfill8>:
  54:	55                   	push   %rbp
  55:	48 89 e5             	mov    %rsp,%rbp
  58:	48 83 ec 30          	sub    $0x30,%rsp
  5c:	89 7d ec             	mov    %edi,-0x14(%rbp)
  5f:	89 75 e8             	mov    %esi,-0x18(%rbp)
  62:	89 d0                	mov    %edx,%eax
  64:	89 4d e0             	mov    %ecx,-0x20(%rbp) ; x0
  67:	44 89 45 dc          	mov    %r8d,-0x24(%rbp) ; y0
  6b:	44 89 4d d8          	mov    %r9d,-0x28(%rbp) ; x1 = 170
  6f:	88 45 e4             	mov    %al,-0x1c(%rbp)
  72:	8b 45 dc             	mov    -0x24(%rbp),%eax ; y1 
  75:	89 45 f8             	mov    %eax,-0x8(%rbp)
  78:	eb 36                	jmp    b0 <boxfill8+0x5c>

  7a:	8b 45 e0             	mov    -0x20(%rbp),%eax ; x0 = 70
  7d:	89 45 fc             	mov    %eax,-0x4(%rbp)  ; x
  80:	eb 22                	jmp    a4 <boxfill8+0x50>
  82:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  86:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  89:	8b 55 fc             	mov    -0x4(%rbp),%edx

  8c:	01 d1                	add    %edx,%ecx
  8e:	8b 55 f8             	mov    -0x8(%rbp),%edx
  91:	0f af 55 e8          	imul   -0x18(%rbp),%edx
  95:	01 ca                	add    %ecx,%edx

  97:	89 c6                	mov    %eax,%esi
  99:	89 d7                	mov    %edx,%edi
  9b:	e8 00 00 00 00       	callq  a0 <boxfill8+0x4c>

  a0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  a4:	8b 45 fc             	mov    -0x4(%rbp),%eax
  a7:	3b 45 d8             	cmp    -0x28(%rbp),%eax ; x <= x1 ?
  aa:	7e d6                	jle    82 <boxfill8+0x2e>
  ac:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  b0:	8b 45 f8             	mov    -0x8(%rbp),%eax
  b3:	3b 45 10             	cmp    0x10(%rbp),%eax
  b6:	7e c2                	jle    7a <boxfill8+0x26>

  b8:	90                   	nop
  b9:	c9                   	leaveq 
  ba:	c3                   	retq   

00000000000000bb <init_palette>:
  bb:	55                   	push   %rbp
  bc:	48 89 e5             	mov    %rsp,%rbp
  bf:	ba 00 00 00 00       	mov    $0x0,%edx
  c4:	be 0f 00 00 00       	mov    $0xf,%esi
  c9:	bf 00 00 00 00       	mov    $0x0,%edi
  ce:	e8 00 00 00 00       	callq  d3 <init_palette+0x18>
  d3:	90                   	nop
  d4:	5d                   	pop    %rbp
  d5:	c3                   	retq   

00000000000000d6 <set_palette>:
  d6:	55                   	push   %rbp
  d7:	48 89 e5             	mov    %rsp,%rbp
  da:	48 83 ec 20          	sub    $0x20,%rsp
  de:	89 7d ec             	mov    %edi,-0x14(%rbp)
  e1:	89 75 e8             	mov    %esi,-0x18(%rbp)
  e4:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  e8:	b8 00 00 00 00       	mov    $0x0,%eax
  ed:	e8 00 00 00 00       	callq  f2 <set_palette+0x1c>
  f2:	89 45 f8             	mov    %eax,-0x8(%rbp)
  f5:	b8 00 00 00 00       	mov    $0x0,%eax
  fa:	e8 00 00 00 00       	callq  ff <set_palette+0x29>
  ff:	8b 45 ec             	mov    -0x14(%rbp),%eax
 102:	89 c6                	mov    %eax,%esi
 104:	bf c8 03 00 00       	mov    $0x3c8,%edi
 109:	e8 00 00 00 00       	callq  10e <set_palette+0x38>
 10e:	8b 45 ec             	mov    -0x14(%rbp),%eax
 111:	89 45 fc             	mov    %eax,-0x4(%rbp)

 114:	eb 5c                	jmp    172 <set_palette+0x9c>
 116:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 11a:	0f b6 00             	movzbl (%rax),%eax
 11d:	c0 e8 02             	shr    $0x2,%al
 120:	0f b6 c0             	movzbl %al,%eax
 123:	89 c6                	mov    %eax,%esi
 125:	bf c9 03 00 00       	mov    $0x3c9,%edi
 12a:	e8 00 00 00 00       	callq  12f <set_palette+0x59>
 12f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 133:	48 83 c0 01          	add    $0x1,%rax
 137:	0f b6 00             	movzbl (%rax),%eax
 13a:	c0 e8 02             	shr    $0x2,%al
 13d:	0f b6 c0             	movzbl %al,%eax
 140:	89 c6                	mov    %eax,%esi
 142:	bf c9 03 00 00       	mov    $0x3c9,%edi
 147:	e8 00 00 00 00       	callq  14c <set_palette+0x76>
 14c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 150:	48 83 c0 02          	add    $0x2,%rax
 154:	0f b6 00             	movzbl (%rax),%eax
 157:	c0 e8 02             	shr    $0x2,%al
 15a:	0f b6 c0             	movzbl %al,%eax
 15d:	89 c6                	mov    %eax,%esi
 15f:	bf c9 03 00 00       	mov    $0x3c9,%edi
 164:	e8 00 00 00 00       	callq  169 <set_palette+0x93>
 169:	48 83 45 e0 03       	addq   $0x3,-0x20(%rbp)
 16e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)

 172:	8b 45 fc             	mov    -0x4(%rbp),%eax
 175:	3b 45 e8             	cmp    -0x18(%rbp),%eax
 178:	7e 9c                	jle    116 <set_palette+0x40>
 17a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 17d:	89 c7                	mov    %eax,%edi
 17f:	e8 00 00 00 00       	callq  184 <set_palette+0xae>
 184:	90                   	nop
 185:	c9                   	leaveq 
 186:	c3                   	retq   
